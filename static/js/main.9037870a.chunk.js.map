{"version":3,"sources":["redux/fetchMovie/actionTypes.ts","components/SearchBar/SearchBar.tsx","tools/url.ts","components/Details/YoutubeVideo.tsx","components/Details/Description.tsx","components/Details/Recommended.tsx","components/Details/Details.tsx","redux/fetchMovie/action.ts","images/tv.png","tools/Reusable.tsx","components/Home/Home.tsx","components/SearchBar/Results.tsx","App.tsx","redux/fetchMovie/movieReducer.ts","redux/rootReducer.ts","redux/store.ts","index.tsx"],"names":["actionTypes","SearchBar","useState","input","setInput","history","useHistory","className","onChange","e","currentTarget","value","type","placeholder","onKeyDown","key","push","API_KEY","process","poster_url","YoutubeVideo","id","trailer","setTrailer","youtube_video","useEffect","getTrailers","a","axios","get","results","data","console","log","title","width","height","src","frameBorder","Description","overview","genres","vote_average","description","setDescription","getDescription","map","i","index","name","Number","toFixed","recommended","setRecommended","getRecommended","params","movie_id","api_key","to","poster_path","alt","Details","useParams","Recommended","Reusable","movies","category","horizontal","hideScrollbars","movie","toString","Home","dispatch","useDispatch","state","useSelector","movieReducer","FETCH_MOVIE_LOADING","topRated","popular","nowPlaying","FETCH_MOVIE_SUCCESS","payload","FETCH_MOVIE_FAIL","tv","Results","query","setResults","getResults","filter","App","exact","path","component","initialState","loading","rootReducer","combineReducers","action","err","localStore","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","store","document","getElementById"],"mappings":"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","file":"static/js/main.9037870a.chunk.js","sourcesContent":["export enum actionTypes {\r\n  FETCH_MOVIE_LOADING = \"FETCH_MOVIE_LOADING\",\r\n  FETCH_MOVIE_SUCCESS = \"FETCH_MOVIE_SUCCESS\",\r\n  FETCH_MOVIE_FAIL = \"FETCH_MOVIE_FAIL\",\r\n}\r\n\r\ntype actionLoad = {\r\n  type: actionTypes.FETCH_MOVIE_LOADING;\r\n};\r\n\r\ntype actionSuccess = {\r\n  type: actionTypes.FETCH_MOVIE_SUCCESS;\r\n  payload: {\r\n    topRated: movieData[];\r\n    popular: movieData[];\r\n    nowPlaying: movieData[];\r\n  };\r\n};\r\n\r\ntype actionFailure = {\r\n  type: actionTypes.FETCH_MOVIE_FAIL;\r\n  payload: string;\r\n};\r\n\r\nexport interface movieData {\r\n  id: Number;\r\n  poster_path: string;\r\n}\r\n\r\nexport type Actions = actionLoad | actionSuccess | actionFailure;\r\n","import { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"./SearchBar.css\";\r\n\r\nconst SearchBar: React.FC = () => {\r\n  const [input, setInput] = useState<string>(\"\");\r\n  const history = useHistory();\r\n  const handleChange = (e: React.FormEvent<HTMLInputElement>) => {\r\n    setInput(e.currentTarget.value);\r\n  };\r\n\r\n  const handleKeydown = (e: React.KeyboardEvent<HTMLDivElement>) => {\r\n    if (e.key === \"Enter\" && input !== \"\") {\r\n      history.push(`/results/${input}`);\r\n      // console.log(input);\r\n    }\r\n  };\r\n  return (\r\n    <section className=\"search-bar section\">\r\n      <input\r\n        onChange={handleChange}\r\n        type=\"text\"\r\n        placeholder=\"Search...\"\r\n        value={input}\r\n        onKeyDown={handleKeydown}\r\n      />\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default SearchBar;\r\n","export const topRatedUrl: string = process.env.REACT_APP_TOP_RATED_URL || \"\";\r\nexport const popularUrl: string = process.env.REACT_APP_POPULAR_URL || \"\";\r\nexport const nowPlayingUrl: string =\r\n  process.env.REACT_APP_NOW_PLAYING_URL || \"\";\r\nexport const API_KEY = process.env.REACT_APP_MOVIE_API_KEY;\r\nexport const youtube_videos = process.env.REACT_APP_YOUTUBE_VIDEOS;\r\nexport const youtube_link = process.env.REACT_APP_YOUTUBE_LINK;\r\nexport const recommendedUrl = process.env.REACT_APP_RECOMMENDED_URL;\r\nexport const movieDataUrl = process.env.REACT_APP_MOVIE_DATA_URL;\r\nexport const poster_url = process.env.REACT_APP_POSTERS;\r\nexport const search_movie_url = process.env.REACT_APP_SEARCH_MOVIES;\r\nexport const youtube_url = process.env.REACT_APP_YOUTUBE;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { youtube_videos, API_KEY, youtube_url } from \"../../tools/url\";\r\n\r\ninterface props {\r\n  id: string;\r\n}\r\nconst YoutubeVideo: React.FC<props> = ({ id }) => {\r\n  const [trailer, setTrailer] = useState(\"\");\r\n  const youtube_video = `${youtube_videos}${id}/videos?api_key=${API_KEY}`;\r\n\r\n  useEffect(() => {\r\n    const getTrailers = async () => {\r\n      try {\r\n        const {\r\n          data: { results },\r\n        } = await axios.get(youtube_video);\r\n\r\n        setTrailer(results[0].key);\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    };\r\n\r\n    getTrailers();\r\n  }, [trailer, youtube_video]);\r\n  return (\r\n    <div className=\"youtube-video\">\r\n      <iframe\r\n        title=\"youtube\"\r\n        width=\"853\"\r\n        height=\"480\"\r\n        src={`${youtube_url}/${trailer}`}\r\n        frameBorder=\"0\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default YoutubeVideo;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { API_KEY } from \"../../tools/url\";\r\n\r\ninterface props {\r\n  id: string;\r\n}\r\nconst Description: React.FC<props> = ({ id }) => {\r\n  const [description, setDescription] = useState({\r\n    title: null,\r\n    overview: null,\r\n    genres: [],\r\n    vote_average: null,\r\n  });\r\n\r\n  useEffect(() => {\r\n    const getDescription = async () => {\r\n      const {\r\n        data: { title, overview, genres, vote_average },\r\n      } = await axios.get(\r\n        `https://api.themoviedb.org/3/movie/${id}?api_key=${API_KEY}`\r\n      );\r\n      setDescription({\r\n        title,\r\n        overview,\r\n        genres,\r\n        vote_average,\r\n      });\r\n    };\r\n    getDescription();\r\n  }, [id]);\r\n\r\n  return (\r\n    <div className=\"description\">\r\n      <h1>{description.title}</h1>\r\n      <p>{description.overview}</p>\r\n      <div className=\"genres\">\r\n        <h3>Genres:</h3>\r\n        <div>\r\n          {description.genres.map((i: { name: string }, index) => (\r\n            <p key={index}>{i.name}</p>\r\n          ))}\r\n        </div>\r\n      </div>\r\n      <div className=\"rating-container\">\r\n        <h3> Rating: </h3>\r\n        <p> {Number(description.vote_average).toFixed(1)} </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Description;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { API_KEY, recommendedUrl, poster_url } from \"../../tools/url\";\r\nimport { Link } from \"react-router-dom\";\r\ninterface props {\r\n  id: string;\r\n}\r\nconst Description: React.FC<props> = ({ id }) => {\r\n  const [recommended, setRecommended] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const getRecommended = async () => {\r\n      try {\r\n        const {\r\n          data: { results },\r\n        } = await axios.get(`${recommendedUrl}/${id}/recommendations?`, {\r\n          params: {\r\n            movie_id: id,\r\n            api_key: API_KEY,\r\n          },\r\n        });\r\n        setRecommended(results);\r\n      } catch (err) {\r\n        return console.log(err);\r\n      }\r\n    };\r\n    getRecommended();\r\n  }, [id]);\r\n\r\n  return (\r\n    <div className=\"recommended\">\r\n      <h1>Recommended:</h1>\r\n      <div>\r\n        {recommended.map((i: any) => {\r\n          return (\r\n            <Link to={`/details/${i.id}`}>\r\n              <img src={`${poster_url}${i.poster_path}`} alt=\"\" />\r\n            </Link>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Description;\r\n","import \"./style.css\";\r\nimport \"../../index.css\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nimport YoutubeVideo from \"./YoutubeVideo\";\r\nimport Description from \"./Description\";\r\nimport Recommended from \"./Recommended\";\r\n\r\nconst Details: React.FC = () => {\r\n  const params: { id: string } = useParams();\r\n\r\n  return (\r\n    <section className=\"section details\">\r\n      <div className=\"youtube-and-description\">\r\n        <YoutubeVideo id={params.id} />\r\n        <Description id={params.id} />\r\n      </div>\r\n      <Recommended id={params.id} />\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Details;\r\n","import axios from \"axios\";\r\nimport { Dispatch } from \"redux\";\r\nimport { actionTypes } from \"./actionTypes\";\r\nimport {\r\n  topRatedUrl,\r\n  popularUrl,\r\n  nowPlayingUrl,\r\n  API_KEY,\r\n} from \"../../tools/url\";\r\n\r\nexport const fetchMovies = () => async (dispatch: Dispatch) => {\r\n  dispatch({ type: actionTypes.FETCH_MOVIE_LOADING });\r\n  try {\r\n    const topRated = await axios.get(topRatedUrl, {\r\n      params: {\r\n        api_key: API_KEY,\r\n      },\r\n    });\r\n\r\n    const popular = await axios.get(popularUrl, {\r\n      params: {\r\n        api_key: API_KEY,\r\n      },\r\n    });\r\n    const nowPlaying = await axios.get(nowPlayingUrl, {\r\n      params: {\r\n        api_key: API_KEY,\r\n      },\r\n    });\r\n    dispatch({\r\n      type: actionTypes.FETCH_MOVIE_SUCCESS,\r\n      payload: {\r\n        topRated: topRated.data.results,\r\n        popular: popular.data.results,\r\n        nowPlaying: nowPlaying.data.results,\r\n      },\r\n    });\r\n    // console.log(topRated);\r\n  } catch (err) {\r\n    dispatch({\r\n      type: actionTypes.FETCH_MOVIE_FAIL,\r\n      payload: err,\r\n    });\r\n  }\r\n};\r\n","export default __webpack_public_path__ + \"static/media/tv.0049bc70.png\";","import { movieData } from \"../redux/fetchMovie/actionTypes\";\r\nimport \"./reusable.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ScrollContainer from \"react-indiana-drag-scroll\";\r\ninterface props {\r\n  movies: movieData[];\r\n  category: string;\r\n}\r\nconst images = \"https://image.tmdb.org/t/p/w500\";\r\n\r\nexport const Reusable: React.FC<props> = ({ movies, category }) => {\r\n  return (\r\n    <div className=\"poster-container\">\r\n      <h1 className=\"category\">{category}</h1>\r\n      <div className=\"poster-wrapper\">\r\n        <ScrollContainer\r\n          className=\"scroll-container\"\r\n          horizontal={true}\r\n          hideScrollbars={true}\r\n        >\r\n          {movies.map((movie) => {\r\n            return (\r\n              <Link\r\n                to={`/details/${movie.id}`}\r\n                className=\"poster\"\r\n                key={movie.id.toString()}\r\n              >\r\n                <img src={`${images}${movie.poster_path}`} alt=\"poster\" />\r\n              </Link>\r\n            );\r\n          })}\r\n        </ScrollContainer>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { fetchMovies } from \"../../redux/fetchMovie/action\";\r\nimport { RootState } from \"../../redux/rootReducer\";\r\nimport tv from \"../../images/tv.png\";\r\nimport \"./home.css\";\r\nimport { Reusable } from \"../../tools/Reusable\";\r\n\r\nconst Home: React.FC = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const state = useSelector((state: RootState) => state.movieReducer.movies);\r\n  useEffect(() => {\r\n    dispatch(fetchMovies());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <section className=\"home\">\r\n      <div className=\"home-banner\">\r\n        <div className=\"home-banner-wrapper\">\r\n          <div className=\"home-details\">\r\n            <h1>Enjoy Your TV.</h1>\r\n            <p>\r\n              Watch on Smart TVs, Playstation, Xbox, Chromecast, Apple TV,\r\n              Blu-ray players, and more.\r\n            </p>\r\n          </div>\r\n          <div className=\"img-wrapper\">\r\n            <img src={tv} alt=\"\" />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"movies\">\r\n        <Reusable movies={state.nowPlaying} category=\"NOW PLAYING\" />\r\n        <Reusable movies={state.topRated} category=\"TOP RATING\" />\r\n        <Reusable movies={state.popular} category=\"POPULAR\" />\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { API_KEY, search_movie_url, poster_url } from \"../../tools/url\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./SearchBar.css\";\r\ninterface params {\r\n  query: string;\r\n}\r\nconst Results: React.FC = () => {\r\n  const { query }: params = useParams();\r\n\r\n  const [results, setResults] = useState([]);\r\n  // console.log(query);\r\n\r\n  useEffect(() => {\r\n    const getResults = async () => {\r\n      const {\r\n        data: { results },\r\n      } = await axios.get(`${search_movie_url}`, {\r\n        params: {\r\n          api_key: API_KEY,\r\n          query,\r\n        },\r\n      });\r\n      setResults(results.filter((movie: any) => movie.poster_path !== null));\r\n    };\r\n    getResults();\r\n  }, [query]);\r\n\r\n  return (\r\n    <section className=\"results section\">\r\n      {results.map((movie: any, index) => {\r\n        return (\r\n          <Link\r\n            key={index}\r\n            className=\"results-poster\"\r\n            to={`/details/${movie.id}`}\r\n          >\r\n            <img src={`${poster_url}${movie.poster_path}`} alt=\"\" />\r\n          </Link>\r\n        );\r\n      })}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Results;\r\n","import React from \"react\";\r\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\r\nimport SearchBar from \"./components/SearchBar/SearchBar\";\r\nimport Details from \"./components/Details/Details\";\r\n\r\nimport Home from \"./components/Home/Home\";\r\nimport Results from \"./components/SearchBar/Results\";\r\n\r\nconst App: React.FC = () => {\r\n  return (\r\n    <>\r\n      <BrowserRouter>\r\n        <SearchBar />\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Home} />\r\n          <Route exact path=\"/details/:id\" component={Details} />\r\n          <Route path=\"/results/:query\" component={Results} />\r\n        </Switch>\r\n      </BrowserRouter>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { Actions, actionTypes, movieData } from \"./actionTypes\";\r\n\r\ninterface interfaceState {\r\n  loading: boolean;\r\n  movies: {\r\n    topRated: movieData[];\r\n    popular: movieData[];\r\n    nowPlaying: movieData[];\r\n  };\r\n  err?: string;\r\n}\r\n\r\nlet initialState: interfaceState = {\r\n  loading: false,\r\n  movies: {\r\n    topRated: [],\r\n    popular: [],\r\n    nowPlaying: [],\r\n  },\r\n};\r\n\r\nexport const movieReducer = (\r\n  state: interfaceState = initialState,\r\n  action: Actions\r\n) => {\r\n  switch (action.type) {\r\n    case actionTypes.FETCH_MOVIE_LOADING:\r\n      return { ...state, loading: true };\r\n    case actionTypes.FETCH_MOVIE_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        movies: action.payload,\r\n      };\r\n    case actionTypes.FETCH_MOVIE_FAIL:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n\r\n        err: action.payload,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport { movieReducer } from \"./fetchMovie/movieReducer\";\r\n\r\nexport const rootReducer = combineReducers({\r\n  movieReducer,\r\n});\r\nexport type RootState = ReturnType<typeof rootReducer>;\r\n","import thunk from \"redux-thunk\";\r\nimport { applyMiddleware, createStore } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport { rootReducer } from \"./rootReducer\";\r\n\r\nexport const localStore = createStore(\r\n  rootReducer,\r\n  composeWithDevTools(applyMiddleware(thunk))\r\n);\r\n","import ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport \"./index.css\";\r\nimport { Provider } from \"react-redux\";\r\nimport { localStore } from \"./redux/store\";\r\nimport { BrowserRouter, HashRouter } from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n  <HashRouter>\r\n    <Provider store={localStore}>\r\n      <App />\r\n    </Provider>\r\n  </HashRouter>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}